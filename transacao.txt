create table  Cliente (
    cod int identity(1,1) constraint pk_client primary key,
    nome varchar(40) not null,
    fone int,
    credito decimal constraint credit check(credito > 0)
    )
 
create table Endereco (
    cod int identity(1,1) constraint pk_adress primary key,
    rua varchar(40) not null,
    numero int not null,
    bairro varchar(40) not null,
    cep varchar(9) not null,
    cliente int,
    
    constraint fk_client foreign key(cliente) references Cliente(cod)
    )
    
create table Vendedor (
    cod int identity(1,1) constraint pk_salesman primary key,
    nome varchar(40) not null,
    fone int,
    funcao varchar(10) constraint funcao check(funcao in ('Balcão', 'Externo','Aprendiz','Supervisor')) not null
    )
    
create table Salario (
    cod int identity(1,1) constraint pk_salary primary key,
    data date,
    comissao decimal not null,
    valor decimal not null,
    vendedor int not null,
    constraint value_salary check((valor > 2000 and comissao < 1800) or (valor <= 2000)),
    constraint fk_salesman foreign key(vendedor) references Vendedor(cod)
    )
    
create table Venda(
    cod int identity(1,1) constraint pk_sale primary key,
    data date constraint date_sale default(getdate()) not null,
    frete decimal not null,
    valor decimal not null,
    cliente int not null,
    vendedor int not null,
    comissao decimal not null,
    constraint fk_salesmanToSale foreign key(vendedor) references Vendedor(cod),
    constraint fk_customer foreign key(cliente) references Cliente(cod)
    )

create table Produto(
    cod int identity(1,1) constraint pk_product primary key,
    nome varchar(40) not null,
    unidade varchar(5) constraint qnt check(unidade in ('PÇ', 'grama', 'Kg', 'Metro', 'Litro')),
    estoque int not null,
    constraint stock check(estoque > 0 and unidade = 'PÇ' or estoque > 0)
    
    )
    
create table Financeiro(
    cod int identity(1,1) constraint pk_financial primary key,
    data_lancamento date,
    data_vencimento date,
    data_liquidacao date,
    valor decimal constraint value_financial check(valor > 0),
    venda int not null,
    constraint fk_saleFinancial foreign key(venda) references Venda(cod)
    )
    
create table ProdutoVenda(
    cod int identity(1,1) constraint pk_product_sale primary key,
    produto int not null,
    venda int not null,
    quantidade int not null,
    constraint fk_sale_ProdutoVenda foreign key(venda) references Venda(cod),
    constraint fk_product_ProdutoVenda foreign key(produto) references Produto(cod)
    )


--6

alter table Venda
add situacao varchar(40) not null constraint situacao default('Não Registrado')

select * from Venda

insert into Cliente
    values('Cliente 1', 123321-5312, 1)
    
insert into Endereco
    values('rua cliente 1', 1234, 'bairro do cliente 1', '64578-31', 1)
    
insert into Vendedor
    values('Vendedor 1', 128575-8252, 'Aprendiz')

insert into Venda(frete, valor, cliente, vendedor, comissao) 
values(13, 200, 1, 1, 10),
(20, 500, 1, 1, 12)


insert into Produto 
values('Produto 1', 'PÇ', 10),
('Produto 2', 'PÇ', 500),
('Produto 3', 'Kg', 1000)
-- transação
 

select * from Venda

begin transaction vendaTran
    begin try
--6.a
        update Venda 
         set situacao = 'Registrado' where cod = 1;
         
         insert into Financeiro
         values('10-13-2020','12-20-2020','11-05-2020',2000, 1)

--6.b
         insert into ProdutoVenda(produto, venda, quantidade)
         values(1, 1, 5)
         update Produto
        set estoque = estoque - (select quantidade from ProdutoVenda 
                         inner join Produto on Produto.cod = ProdutoVenda.produto where
                         ProdutoVenda.cod = (select count(*) from ProdutoVenda))
        where cod = (select produto from ProdutoVenda 
       inner join Produto on ProdutoVenda.produto = Produto.cod where ProdutoVenda.cod = (select count(*) from ProdutoVenda))

         
         insert into ProdutoVenda(produto, venda, quantidade)
         values(2, 1, 2)
         
         update Produto
            set estoque = estoque - (select quantidade from ProdutoVenda 
                         inner join Produto on Produto.cod = ProdutoVenda.produto where
                         ProdutoVenda.cod = (select count(*) from ProdutoVenda))
            where cod = (select produto from ProdutoVenda 
           inner join Produto on ProdutoVenda.produto = Produto.cod where ProdutoVenda.cod = (select count(*) from ProdutoVenda))

         insert into ProdutoVenda(produto, venda, quantidade)
         values(1, 1, 1)  
                

            update Produto
        set estoque = estoque - (select quantidade from ProdutoVenda 
                         inner join Produto on Produto.cod = ProdutoVenda.produto where
                         ProdutoVenda.cod = (select count(*) from ProdutoVenda))
        where cod = (select produto from ProdutoVenda 
       inner join Produto on ProdutoVenda.produto = Produto.cod where ProdutoVenda.cod = (select count(*) from ProdutoVenda))

         

 
--6.c
     
        update Venda
        set comissao = 0.1 * valor
        where cod =(select count(*) from Venda)

         select * from ProdutoVenda 
         inner join Venda on ProdutoVenda.venda = Venda.cod
         inner join Produto on ProdutoVenda.produto = Produto.cod 
         
         commit transaction vendaTran
      end try
      
      begin catch
          select 
              error_number() as NumeroErro,
              error_line() as LinhaComErro,
              error_message() as MensagemErro
          rollback transaction vendaTran
       end catch